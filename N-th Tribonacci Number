class Solution {
    public int tribonacci(int n) {
        Map<Integer, Integer> memo = new HashMap<>();
        return tribonacciHelper(n, memo);
    }
    private int tribonacciHelper(int n, Map<Integer, Integer> memo) {
        if (n == 0) return 0;
        if (n == 1 || n == 2) return 1;

        if (memo.containsKey(n)) {
            return memo.get(n);
        }
        int result = tribonacciHelper(n - 1, memo)
                   + tribonacciHelper(n - 2, memo)
                   + tribonacciHelper(n - 3, memo);
        memo.put(n, result);
        return result;
    }
}
